@use "colors" as c;
@use "variables" as v;

@mixin flex-property(
  $flexDirection: row,
  $alignItems: flex-start,
  $justifyContent: flex-start,
  $gap: 0
) {
  display: flex;
  flex-direction: $flexDirection;
  align-items: $alignItems;
  justify-content: $justifyContent;
  gap: $gap;
}

@mixin lists($isTasksDoneList: false) {
  @include flex-property(column, null, null, 16px);

  & > li {
    width: 100%;
    padding: 1.375rem 1.25rem;
    border-radius: 10px;

    @if $isTasksDoneList == true {
      background-color: #{var(--task-background-color-2)};
      color: #{var(--accent-color-2)};
      text-decoration: line-through;
    }

    @if $isTasksDoneList == false {
      background-color: #{var(--task-background-color-1)};
      color: #{var(--accent-color-1)};
      @include flex-property(null, center, space-between, 16px);

      button {
        background-color: transparent;
      }
    }
  }
}

@mixin primary-button() {
  padding: 0 0.5938rem;
  background-color: #{var(--accent-color-1)};
  border-radius: 10px;

  transition: background-color ease 0.25s, color ease 0.25s;

  &:hover {
    background-color: #{var(--button-hover-color)};
  }
}

@mixin sm {
  @media (min-width: #{v.$screen-sm-min}) {
    @content;
  }
}

@mixin md {
  @media (min-width: #{v.$screen-md-min}) {
    @content;
  }
}

@mixin lg {
  @media (min-width: #{v.$screen-lg-min}) {
    @content;
  }
}

@mixin xl {
  @media (min-width: #{v.$screen-xl-min}) {
    @content;
  }
}

@mixin _2xl {
  @media (min-width: #{v.$screen-2xl-min}) {
    @content;
  }
}
